{"version":3,"file":"fixed-size-table-virtual-scroll-strategy.d.ts","sources":["fixed-size-table-virtual-scroll-strategy.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BehaviorSubject, Subject } from 'rxjs';\r\nimport { CdkVirtualScrollViewport, VirtualScrollStrategy } from '@angular/cdk/scrolling';\r\nimport { ListRange } from '@angular/cdk/collections';\r\nexport interface TSVStrategyConfigs {\r\n    rowHeight: number;\r\n    headerHeight: number;\r\n    footerHeight: number;\r\n    bufferMultiplier: number;\r\n}\r\nexport declare class FixedSizeTableVirtualScrollStrategy implements VirtualScrollStrategy {\r\n    private rowHeight;\r\n    private headerHeight;\r\n    private footerHeight;\r\n    private bufferMultiplier;\r\n    private indexChange;\r\n    stickyChange: Subject<number>;\r\n    viewport: CdkVirtualScrollViewport;\r\n    renderedRangeStream: BehaviorSubject<ListRange>;\r\n    scrolledIndexChange: import(\"rxjs\").Observable<number>;\r\n    dataLength: number;\r\n    private _dataLength;\r\n    attach(viewport: CdkVirtualScrollViewport): void;\r\n    detach(): void;\r\n    onContentScrolled(): void;\r\n    onDataLengthChanged(): void;\r\n    onContentRendered(): void;\r\n    onRenderedOffsetChanged(): void;\r\n    scrollToIndex(index: number, behavior?: ScrollBehavior): void;\r\n    setConfig(configs: TSVStrategyConfigs): void;\r\n    private updateContent;\r\n}\r\n"]}